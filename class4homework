Java工程师体系课第四周作业

题目 01- 请你说一说什么是线程和进程？
•	区别
进程是一个运行的程序实例。它包含一个程序运行所需要的所有的东西，比如内存空间。线程是进程中的一个运行片段。一个进程可以有多个线程同时运行。线程没有自己的内存空间，它只是用进程的内存空间。所有的线程共享它们的进程的内存空间。线程是CPU调度的单元，进程是操作系统划分内存空间并管理内存的单元。不同进程不共享内存空间。
•	关系
线程依附于进程。线程在进程内部生成。线程是进程的调度单元。进程包含线程所需的所有资源的管理。一个线程只属于一个进程。一个进程的所有线程共享进程的内存空间，文件系统，I/O设备等等。每个线程有自己的栈，在运行时有自己的CPU.
•	线程的上下文切换是什么？
线程的上下文切换是指在调度线程时需要的保存和回复线程的状态。每个线程都有自己的运行上下文，比如当前栈，运行指令和所有寄存器内容。当一个进程被调度出CPU时，它的上下文必须全部保存下来。当一个线程被调度进CPU时，它的上下文要先被恢复，线程才能开始运行。线程上下文切换是个复杂昂贵的过程，所以要尽量避免。但进程的上下文切换要比线程的上下文切换复杂昂贵的多，这也是线程相对进程的优势之一。
•	线程的并发与并行有啥区别？
并发是指表面上同时处理多任务，但任一时刻只处理一个任务。并行是指一个时刻有多个任务在执行。在只有一个CPU的情况下，并发是可能的（只要切换线程），并行是不可能的。

题目 02- 使用了多线程会带来什么问题呢？
•	能不能详细说说线程安全问题？
同一个进程的所有线程共享一个内存空间，也就是所有的堆变量。这样不同的线程在读写同一个变量是可能会出现意想不到的情况。比如两个线程同时修改一个变量，如果两个线程在不同CPU上运行，如果没有其它限制，是很难保证这个变量的最终结果。同理，一个读线程，一个写线程，在没有其它限定条件下，无法保证读出来的是写之前还是写之后的结果。
•	原子性、有序性和可见性能不能深入的谈一下。
原子性是指多个操作要么都完成，要么没有一个完成。
有序性是指程序的执行是按代码先后次序执行。
可见性是指一个变量被修改后，所有的线程都看到被修改后的值。

题目 03- 什么是死锁？如何排查死锁?
排查过程最好详细说明，最少说一种排查方案，越多越好。
死锁是指两个或两个以上的线程互相等待一些资源而导致没有线程能继续执行。
方案1：
先用jps 查找进程pid.
然后用jstack查看这个pid的运行情况。Jstack会打印出死锁的栈情况。
方案2：
用jconsole也可以显示死锁的情况。
方案3：
对于非java程序，可以用gdb 查看。gdb info thread指令会显示所有线程的栈信息。仔细阅读栈信息可以看到死锁的线程。 
方案4：
用·linux pstack也可以看到栈信息。通过分析栈可以发现死锁。

